/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.tic_tac_toe;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.Timer;

/**
 *
 * @author ben_9
 */
public class Tablero extends javax.swing.JPanel {

    boolean versusComputadora = false;
    Jugador jugador1;
    Jugador jugador2;
    boolean ocurrioUnaVictoria = false;
    JFrame frameActual;
    int turnoActual = 0; // Indica los dos turnos 0 para jugador 1 y 1 para jugador 2
    IA bot;
    javax.swing.JLabel[] todasLasCasillas;
    Timer timer;

    // Variables para el reloj
    int segundos = 0;
    int minutos = 0;
    int milisegundos = 0;

    int[][] formasDeVictoria = {
        // Filas
        {0, 1, 2}, // Fila 1
        {3, 4, 5}, // Fila 2
        {6, 7, 8}, // Fila 3

        // Columnas
        {0, 3, 6}, // Columna 1
        {1, 4, 7}, // Columna 2
        {2, 5, 8}, // Columna 3

        // Diagonales
        {0, 4, 8}, // Diagonal 1
        {2, 4, 6} // Diagonal 2
    };

    /**
     * Creates new form Tablero
     */
    public Tablero(String nombreJugador1, String caracterJugador1, String nombreJugador2, String caracterJugador2, JFrame frame, Boolean versusBot) {
        initComponents();
        todasLasCasillas = new javax.swing.JLabel[]{Casilla1, Casilla2, Casilla3, Casilla4, Casilla5, Casilla6, Casilla7, Casilla8, Casilla9};

        this.jugador1 = new Jugador(caracterJugador1, nombreJugador1);
        this.jugador2 = new Jugador(caracterJugador2, nombreJugador2);

        int tamanoATruncar = 9;

        if (nombreJugador1.length() > tamanoATruncar) {
            nombreJugador1 = nombreJugador1.substring(0, tamanoATruncar) + "...";
        }

        if (nombreJugador2.length() > tamanoATruncar) {
            nombreJugador2 = nombreJugador2.substring(0, tamanoATruncar) + "...";
        }

        // Asignar los nombres truncados a las casillas
        this.NombreJugador1.setText(nombreJugador1);
        this.NombreJugador2.setText(nombreJugador2);
        this.IndicadorJugador1.setText(this.jugador1.getCaracter());
        this.IndicadorJugador2.setText(this.jugador2.getCaracter());
        tiempoPartida();
        this.turnoActual = (int) (Math.random() * 2);
        indicarElTurno();
        this.frameActual = frame;

        this.bot = new IA(this.todasLasCasillas, this.jugador1, this.jugador2, this.formasDeVictoria);
        lanzarMovimientoDelBot();
        this.versusComputadora = versusBot;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        TiempoJuego = new javax.swing.JLabel();
        BtnReiniciar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        Casilla3 = new javax.swing.JLabel();
        Casilla1 = new javax.swing.JLabel();
        Casilla2 = new javax.swing.JLabel();
        Casilla6 = new javax.swing.JLabel();
        Casilla5 = new javax.swing.JLabel();
        Casilla4 = new javax.swing.JLabel();
        Casilla8 = new javax.swing.JLabel();
        Casilla7 = new javax.swing.JLabel();
        Casilla9 = new javax.swing.JLabel();
        NombreJugador1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        VictoriasJugador1 = new javax.swing.JLabel();
        IndicadorJugador1 = new javax.swing.JLabel();
        VictoriasJugador2 = new javax.swing.JLabel();
        NombreJugador2 = new javax.swing.JLabel();
        IndicadorJugador2 = new javax.swing.JLabel();
        BtnMenu = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        TiempoJuego.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        TiempoJuego.setForeground(new java.awt.Color(0, 0, 0));
        TiempoJuego.setText("00:00");

        BtnReiniciar.setText("Reiniciar");
        BtnReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnReiniciarActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 0, 153));

        Casilla3.setBackground(new java.awt.Color(255, 255, 255));
        Casilla3.setFont(new java.awt.Font("Segoe UI Emoji", 1, 50)); // NOI18N
        Casilla3.setForeground(new java.awt.Color(0, 0, 0));
        Casilla3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Casilla3.setOpaque(true);
        Casilla3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Casilla3MousePressed(evt);
            }
        });

        Casilla1.setBackground(new java.awt.Color(255, 255, 255));
        Casilla1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 50)); // NOI18N
        Casilla1.setForeground(new java.awt.Color(0, 0, 0));
        Casilla1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Casilla1.setOpaque(true);
        Casilla1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Casilla1MousePressed(evt);
            }
        });

        Casilla2.setBackground(new java.awt.Color(255, 255, 255));
        Casilla2.setFont(new java.awt.Font("Segoe UI Emoji", 1, 50)); // NOI18N
        Casilla2.setForeground(new java.awt.Color(0, 0, 0));
        Casilla2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Casilla2.setOpaque(true);
        Casilla2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Casilla2MousePressed(evt);
            }
        });

        Casilla6.setBackground(new java.awt.Color(255, 255, 255));
        Casilla6.setFont(new java.awt.Font("Segoe UI Emoji", 1, 50)); // NOI18N
        Casilla6.setForeground(new java.awt.Color(0, 0, 0));
        Casilla6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Casilla6.setOpaque(true);
        Casilla6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Casilla6MousePressed(evt);
            }
        });

        Casilla5.setBackground(new java.awt.Color(255, 255, 255));
        Casilla5.setFont(new java.awt.Font("Segoe UI Emoji", 1, 50)); // NOI18N
        Casilla5.setForeground(new java.awt.Color(0, 0, 0));
        Casilla5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Casilla5.setOpaque(true);
        Casilla5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Casilla5MousePressed(evt);
            }
        });

        Casilla4.setBackground(new java.awt.Color(255, 255, 255));
        Casilla4.setFont(new java.awt.Font("Segoe UI Emoji", 1, 50)); // NOI18N
        Casilla4.setForeground(new java.awt.Color(0, 0, 0));
        Casilla4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Casilla4.setOpaque(true);
        Casilla4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Casilla4MousePressed(evt);
            }
        });

        Casilla8.setBackground(new java.awt.Color(255, 255, 255));
        Casilla8.setFont(new java.awt.Font("Segoe UI Emoji", 1, 50)); // NOI18N
        Casilla8.setForeground(new java.awt.Color(0, 0, 0));
        Casilla8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Casilla8.setOpaque(true);
        Casilla8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Casilla8MousePressed(evt);
            }
        });

        Casilla7.setBackground(new java.awt.Color(255, 255, 255));
        Casilla7.setFont(new java.awt.Font("Segoe UI Emoji", 1, 50)); // NOI18N
        Casilla7.setForeground(new java.awt.Color(0, 0, 0));
        Casilla7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Casilla7.setOpaque(true);
        Casilla7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Casilla7MousePressed(evt);
            }
        });

        Casilla9.setBackground(new java.awt.Color(255, 255, 255));
        Casilla9.setFont(new java.awt.Font("Segoe UI Emoji", 1, 50)); // NOI18N
        Casilla9.setForeground(new java.awt.Color(0, 0, 0));
        Casilla9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Casilla9.setOpaque(true);
        Casilla9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Casilla9MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(Casilla4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Casilla5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Casilla6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(Casilla1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Casilla2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Casilla3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(Casilla7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Casilla8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Casilla9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Casilla3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Casilla1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Casilla2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Casilla6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Casilla4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Casilla5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Casilla9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Casilla7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Casilla8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        NombreJugador1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        NombreJugador1.setForeground(new java.awt.Color(0, 0, 0));
        NombreJugador1.setText("Jugador 1");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 2, 30)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 0, 204));
        jLabel3.setText("Victorias");

        VictoriasJugador1.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        VictoriasJugador1.setForeground(new java.awt.Color(0, 0, 0));
        VictoriasJugador1.setText("0");

        IndicadorJugador1.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        IndicadorJugador1.setForeground(new java.awt.Color(0, 0, 0));
        IndicadorJugador1.setText("X");

        VictoriasJugador2.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        VictoriasJugador2.setForeground(new java.awt.Color(0, 0, 0));
        VictoriasJugador2.setText("0");

        NombreJugador2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        NombreJugador2.setForeground(new java.awt.Color(0, 0, 0));
        NombreJugador2.setText("Jugador 1");

        IndicadorJugador2.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        IndicadorJugador2.setForeground(new java.awt.Color(0, 0, 0));
        IndicadorJugador2.setText("X");

        BtnMenu.setText("Menu");
        BtnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(IndicadorJugador1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(106, 106, 106)
                .addComponent(IndicadorJugador2)
                .addGap(58, 58, 58))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BtnMenu)
                        .addGap(103, 103, 103)
                        .addComponent(TiempoJuego)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnReiniciar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(NombreJugador1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(VictoriasJugador1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(VictoriasJugador2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NombreJugador2)))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TiempoJuego)
                    .addComponent(BtnReiniciar)
                    .addComponent(BtnMenu))
                .addGap(41, 41, 41)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(IndicadorJugador2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(IndicadorJugador1)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NombreJugador1)
                        .addComponent(VictoriasJugador1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(VictoriasJugador2)
                        .addComponent(NombreJugador2)))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnReiniciarActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < todasLasCasillas.length; i++) {
            todasLasCasillas[i].setText("");
            todasLasCasillas[i].setBackground(Color.WHITE);
            todasLasCasillas[i].setForeground(Color.BLACK);
        }

        this.ocurrioUnaVictoria = false;
        this.turnoActual = 0;
        this.minutos = 0;
        this.segundos = 0;
        this.milisegundos = 0;
        this.timer.start();
        this.turnoActual = (int) (Math.random() * 2);
        indicarElTurno();
        lanzarMovimientoDelBot();
    }//GEN-LAST:event_BtnReiniciarActionPerformed

    private void Casilla1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Casilla1MousePressed
        // TODO add your handling code here:
        MarcarLaCasilla(this.Casilla1);
    }//GEN-LAST:event_Casilla1MousePressed

    private void Casilla2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Casilla2MousePressed
        // TODO add your handling code here:
        MarcarLaCasilla(this.Casilla2);
    }//GEN-LAST:event_Casilla2MousePressed

    private void Casilla3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Casilla3MousePressed
        // TODO add your handling code here:
        MarcarLaCasilla(this.Casilla3);
    }//GEN-LAST:event_Casilla3MousePressed

    private void Casilla4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Casilla4MousePressed
        // TODO add your handling code here:
        MarcarLaCasilla(this.Casilla4);
    }//GEN-LAST:event_Casilla4MousePressed

    private void Casilla5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Casilla5MousePressed
        // TODO add your handling code here:
        MarcarLaCasilla(this.Casilla5);
    }//GEN-LAST:event_Casilla5MousePressed

    private void Casilla6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Casilla6MousePressed
        // TODO add your handling code here:
        MarcarLaCasilla(this.Casilla6);
    }//GEN-LAST:event_Casilla6MousePressed

    private void Casilla7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Casilla7MousePressed
        // TODO add your handling code here:
        MarcarLaCasilla(this.Casilla7);
    }//GEN-LAST:event_Casilla7MousePressed

    private void Casilla8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Casilla8MousePressed
        // TODO add your handling code here:
        MarcarLaCasilla(this.Casilla8);
    }//GEN-LAST:event_Casilla8MousePressed

    private void Casilla9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Casilla9MousePressed
        // TODO add your handling code here:
        MarcarLaCasilla(this.Casilla9);
    }//GEN-LAST:event_Casilla9MousePressed

    private void BtnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnMenuActionPerformed
        // TODO add your handling code here:
        this.frameActual.getContentPane().removeAll();
        this.frameActual.add(new MenuInicio(this.frameActual));
        this.frameActual.revalidate();
        this.frameActual.repaint();

    }//GEN-LAST:event_BtnMenuActionPerformed

    private void MarcarLaCasilla(javax.swing.JLabel Casilla) {
        if ((Casilla.getText() == null || "".equals(Casilla.getText())) && !this.ocurrioUnaVictoria) {
            // Solo marcar la casilla si no ha ocurrido una victoria
            if (this.turnoActual == 0) {
                // Movimiento del jugador 1
                Casilla.setText(jugador1.getCaracter());
                Casilla.setForeground(Color.RED);

                // Cambiar al siguiente turno
                this.turnoActual = 1; // Ahora es el turno del BOT (jugador 2)
                indicarElTurno();

                // Verificar victoria o empate después de marcar la casilla
                ComprobarVictoriaOEmpate();

                // Si es un juego contra la computadora, el BOT hace su movimiento
                if (this.versusComputadora && !this.ocurrioUnaVictoria) {
                    // Llamar al método del BOT para hacer su movimiento
                    this.bot.realizarMovimiento();

                    // Cambiar al siguiente turno (vuelve al jugador 1)
                    this.turnoActual = 0;
                    indicarElTurno();

                    // Verificar victoria o empate después del movimiento del BOT
                    ComprobarVictoriaOEmpate();
                }
            } else if (this.turnoActual == 1) {
                // Movimiento del jugador 2 (en el caso de un juego de dos jugadores, solo se ejecuta en esta parte)
                Casilla.setText(jugador2.getCaracter());
                Casilla.setForeground(Color.BLUE);

                // Cambiar al siguiente turno
                this.turnoActual = 0; // Ahora es el turno del jugador 1
                indicarElTurno();

                // Verificar victoria o empate después de marcar la casilla
                ComprobarVictoriaOEmpate();
            }
        }
    }

    private void ComprobarVictoriaOEmpate() {
        // Inicializa una bandera para saber si ocurrió una victoria
        boolean victoria = false;

        // Recorre cada posible combinación ganadora
        for (int[] combinacion : this.formasDeVictoria) {
            // Obtiene los caracteres que representan a cada jugador
            String caracterJugador1 = this.jugador1.caracter;
            String caracterJugador2 = this.jugador2.caracter;

            // Obtiene las casillas correspondientes a la combinación ganadora
            JLabel casilla1 = this.todasLasCasillas[combinacion[0]];
            JLabel casilla2 = this.todasLasCasillas[combinacion[1]];
            JLabel casilla3 = this.todasLasCasillas[combinacion[2]];

            // Obtiene los textos de las casillas para verificar si coinciden con los caracteres de los jugadores
            String textoCasilla1 = casilla1.getText();
            String textoCasilla2 = casilla2.getText();
            String textoCasilla3 = casilla3.getText();

            // Comprobar si alguno de los dos jugadores gano la partida revisando los caracteres dentro de las posiciones de la combinacion
            Boolean esVictoriaJugador1 = textoCasilla1.equals(caracterJugador1) && textoCasilla3.equals(caracterJugador1) && textoCasilla2.equals(caracterJugador1);
            Boolean esVictoriaJugador2 = textoCasilla1.equals(caracterJugador2) && textoCasilla3.equals(caracterJugador2) && textoCasilla2.equals(caracterJugador2);

            // Si ocurrió una victoria, colorea las casillas y termina la ejecución
            if (esVictoriaJugador1 || esVictoriaJugador2) {
                casilla1.setBackground(Color.GREEN);
                casilla2.setBackground(Color.GREEN);
                casilla3.setBackground(Color.GREEN);
                this.timer.stop();
                this.ocurrioUnaVictoria = true;
                victoria = true; // Marca que hubo una victoria

                // Comprobar si el jugador 1 ha ganado
                if (esVictoriaJugador1) {
                    System.out.println("¡Ganó el jugador 1!");
//                    JOptionPane.showMessageDialog(null, "¡FELICIDADES " + this.jugador1.getNombre() + "! ", "Victoria", JOptionPane.INFORMATION_MESSAGE);
                    this.jugador1.agregarVictoria();
                    actualizarVictorias();
                    return; // Se detiene la ejecución una vez que se detecta un ganador
                } // Comprobar si el jugador 2 ha ganado
                else if (esVictoriaJugador2) {
                    System.out.println("¡Ganó el jugador 2!");
//                    JOptionPane.showMessageDialog(null, "¡FELICIDADES " + this.jugador2.getNombre() + "! ", "Victoria", JOptionPane.INFORMATION_MESSAGE);
                    this.jugador2.agregarVictoria();
                    actualizarVictorias();
                    return; // Se detiene la ejecución una vez que se detecta un ganador
                }
            }
        }

        // Si no ha habido victoria, verificar si todas las casillas están llenas, en cuyo caso el juego es un empate
        if (!victoria) {
            boolean empate = true;
            for (JLabel casilla : this.todasLasCasillas) {
                if (casilla.getText().isEmpty()) {
                    empate = false; // Si alguna casilla está vacía, no es empate
                    break;
                }
            }

            // Si todas las casillas están llenas y no ha habido un ganador, es empate
            if (empate) {
                this.timer.stop();
                System.out.println("¡El juego terminó en empate!");
//                JOptionPane.showMessageDialog(null, "¡El juego terminó en empate!", "Empate", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    private void actualizarVictorias() {
        this.VictoriasJugador1.setText(String.valueOf(this.jugador1.getPartidasGanadas()));
        this.VictoriasJugador2.setText(String.valueOf(this.jugador2.getPartidasGanadas()));
    }

    private void actualizarTiempo() {
        // Aumentamos los milisegundos
        milisegundos++;

        // Si los milisegundos llegan a 100, los reiniciamos y aumentamos los segundos
        if (milisegundos == 100) {
            milisegundos = 0;
            segundos++;
        }

        // Si los segundos llegan a 60, los reiniciamos y aumentamos los minutos
        if (segundos == 60) {
            segundos = 0;
            minutos++;
        }
    }

    private void mostrarTiempo() {
        String tiempo = String.format("%02d:%02d:%03d", this.minutos, this.segundos, this.milisegundos);
        this.TiempoJuego.setText(tiempo);
    }

    private void tiempoPartida() {
        // Crear un Timer que se ejecuta cada segundo (1000 milisegundos)
        this.timer = new Timer(10, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                actualizarTiempo();
                mostrarTiempo();
            }
        });
        // Iniciar el cronómetro
        this.timer.start();
    }

    private void indicarElTurno() {
        if (this.turnoActual == 0) {
            this.NombreJugador1.setForeground(Color.MAGENTA);
            this.IndicadorJugador1.setForeground(Color.MAGENTA);
            this.VictoriasJugador1.setForeground(Color.MAGENTA);
            this.NombreJugador2.setForeground(Color.BLACK);
            this.IndicadorJugador2.setForeground(Color.BLACK);
            this.VictoriasJugador2.setForeground(Color.BLACK);
        } else if (this.turnoActual == 1) {
            this.NombreJugador1.setForeground(Color.BLACK);
            this.IndicadorJugador1.setForeground(Color.BLACK);
            this.VictoriasJugador1.setForeground(Color.BLACK);
            this.NombreJugador2.setForeground(Color.MAGENTA);
            this.IndicadorJugador2.setForeground(Color.MAGENTA);
            this.VictoriasJugador2.setForeground(Color.MAGENTA);
        }
    }

    private void lanzarMovimientoDelBot() {
        if (this.turnoActual == 1 && this.versusComputadora) {

            // Llamar al método del BOT para hacer su movimiento
            this.bot.realizarMovimiento();

            // Cambiar al siguiente turno (vuelve al jugador 1)
            this.turnoActual = 0;
            indicarElTurno();

            // Verificar victoria o empate después del movimiento del BOT
            ComprobarVictoriaOEmpate();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnMenu;
    private javax.swing.JButton BtnReiniciar;
    private javax.swing.JLabel Casilla1;
    private javax.swing.JLabel Casilla2;
    private javax.swing.JLabel Casilla3;
    private javax.swing.JLabel Casilla4;
    private javax.swing.JLabel Casilla5;
    private javax.swing.JLabel Casilla6;
    private javax.swing.JLabel Casilla7;
    private javax.swing.JLabel Casilla8;
    private javax.swing.JLabel Casilla9;
    private javax.swing.JLabel IndicadorJugador1;
    private javax.swing.JLabel IndicadorJugador2;
    private javax.swing.JLabel NombreJugador1;
    private javax.swing.JLabel NombreJugador2;
    private javax.swing.JLabel TiempoJuego;
    private javax.swing.JLabel VictoriasJugador1;
    private javax.swing.JLabel VictoriasJugador2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
